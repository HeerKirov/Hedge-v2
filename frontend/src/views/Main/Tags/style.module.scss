@import "@/styles/variable.sass";
@import "@/styles/base/color.scss";
@import "@/styles/base/size.sass";

.list-view {
  width: 100%;
  height: 100%;
  overflow-y: auto;
  padding: 0.5rem 2rem;
  box-sizing: border-box;

  @mixin gap-active {
    background-color: rgba(127, 127, 127, 0.5);
  }

  > .root-node {
    > .expanded-box {
      //列表区域的展开收起动画
      @mixin expand-transition-state($e) {
        transition: max-height 0.15s $e;
        overflow: hidden;
        max-height: 150px;
      }
      &.expand-transition-enter-active {
        @include expand-transition-state(ease-in);
      }
      &.expand-transition-leave-active {
        @include expand-transition-state(ease-out);
      }
      &.expand-transition-enter-from,
      &.expand-transition-leave-to {
        max-height: 0;
      }

      .child-node-list {
        padding-top: 0.125rem;
        display: flex;
        &.inline {
          flex-wrap: wrap;

          > .child {
            margin-top: 0.125rem;
            margin-bottom: 0.125rem;
          }
          > .gap {
            width: 0.25rem;
            height: 2em;
            &.is-dragover {
              @include gap-active
            }
          }
        }
        &:not(.inline) {
          flex-wrap: nowrap;
          flex-direction: column;

          > .gap {
            height: 0.25rem;
            &.is-dragover {
              @include gap-active
            }
          }
        }
      }
    }
  }
  //节点之间的空隙
  > .gap {
    height: 0.25rem;
    &.is-dragover {
      @include gap-active
    }
  }

  //标签节点中的drop area内容
  :global(.tag) {
    > .drop-area {
      border-bottom-left-radius: $radius-size-small;
      border-bottom-right-radius: $radius-size-small;
      position: absolute;
      width: 100%;
      height: 35%;
      bottom: 0;
      left: 0;
      text-align: center;
      &.is-dragover {
        background-color: rgba(0, 0, 0, 0.25);
      }
      > :global(.fa) {
        transform: translateY(-0.4em);
      }
    }
    .area {
      position: absolute;
      border-radius: $radius-size-small;
      left: 0; top: 0;
      width: 100%;
      height: 100%;
    }
  }
}

.pane-detail-content {
  .top {
    margin-top: 1.75rem;
  }
  .creator-top {
    margin-top: 0.5rem;
  }
  .title {
    > b { font-size: $font-size-large; }
    > i { margin-left: 0.25rem; }
  }
  .meta {
    margin-left: 0.25rem;
    margin-top: 0.75rem;
  }
  .separator {
    margin-top: 0.75rem;
  }
  .annotations {
    margin-top: 0.25rem;
    > :global(.tag) {
      margin-bottom: 0.25rem;
      margin-right: 0.25rem;
    }
  }
  .description {
    position: relative;
    padding: 0.75rem;
    > .edit {
      position: absolute;
      right: 0.4rem;
      bottom: 0.3rem;
      font-size: $font-size-small;
    }
  }
  .links {
    margin-top: 1rem;
    > p:not(:last-child) {
      margin-bottom: 0.25rem;
    }
  }
  .score {
    margin-top: 1rem;
  }
  .mapping-source-tags {
    margin-top: 1rem;
  }
  .examples {
    margin-top: 1rem;
    margin-bottom: 1rem;
  }
}

.pane-search-content {
  border-left: solid 1px $deep-sidebar;
  @media (prefers-color-scheme: dark) {
    border-left-color: $deep-sidebar-dm;
  }
  .result-count {
    height: $height-small;
    line-height: $height-small;
    margin-top: 0.125rem;
    margin-bottom: 0.125rem;
  }
  .search-input-box {
    width: 99%;
  }
  .result-box {
    box-sizing: border-box;
    margin-top: 0.5rem;
    width: 100%;
    height: calc(100% - #{$height-small + 0.25rem + $height-std + 0.5rem});
    overflow-y: auto;
    > .result-item {
      margin-bottom: 0.25rem;
      > .selected {
        border: solid 1px $link;
      }
    }
  }
}
